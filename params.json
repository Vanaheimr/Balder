{"name":"Blueprints.net","body":"![Blueprints.NET logo](/Vanaheimr/blueprints.NET/raw/master/logo.png)\r\n\r\nBlueprints.NET is a generic graph model [[1](http://en.wikipedia.org/wiki/Graph_(mathematics\\)), \r\n[2](http://en.wikipedia.org/wiki/Graph_(data_structure\\)), [3](http://en.wikipedia.org/wiki/Graph_theory)] \r\ninterface for .NET, Silverlight and Mono. Graph libraries, Graph databases \r\n[[1](http://en.wikipedia.org/wiki/Graph_database), [2](http://www.graph-database.org)] and frameworks \r\nthat implement the Blueprints interface automatically support Blueprints-enabled applications. Likewise, \r\nBlueprints-enabled applications can plug-and-play different Blueprints-enabled graph backends.\r\n\r\nBlueprints also provides an interface for remote network access using [HTTP/REST](http://en.wikipedia.org/wiki/Representational_State_Transfer).\r\n\r\n#### Implementations\r\n\r\n* In-Memory Property Graphs\r\n* In-Memory Generic Property Graphs\r\n* Property Graph Server\r\n* Remote Property Graphs\r\n\r\n#### An usage example for property graphs\r\n\r\n    var _TinkerGraph = new PropertyGraph();\r\n\r\n    _TinkerGraph.OnVertexAdding += (graph, vertex, vote) => {\r\n        Console.WriteLine(\"I like all vertices!\");\r\n    };\r\n\r\n    _TinkerGraph.OnVertexAdding += (graph, vertex, vote) =>\r\n    {\r\n        if (vertex.Id == 5) {\r\n            Console.WriteLine(\"I'm a Jedi!\");\r\n            vote.Veto();\r\n        }\r\n    };\r\n\r\n    var marko  = _TinkerGraph.AddVertex(1, v => v.SetProperty(\"name\", \"marko\"). SetProperty(\"age\",   29));\r\n    var vadas  = _TinkerGraph.AddVertex(2, v => v.SetProperty(\"name\", \"vadas\"). SetProperty(\"age\",   27));\r\n    var lop    = _TinkerGraph.AddVertex(3, v => v.SetProperty(\"name\", \"lop\").   SetProperty(\"lang\", \"java\"));\r\n    var josh   = _TinkerGraph.AddVertex(4, v => v.SetProperty(\"name\", \"josh\").  SetProperty(\"age\",   32));\r\n    var vader  = _TinkerGraph.AddVertex(5, v => v.SetProperty(\"name\", \"darth vader\"));\r\n    var ripple = _TinkerGraph.AddVertex(6, v => v.SetProperty(\"name\", \"ripple\").SetProperty(\"lang\", \"java\"));\r\n    var peter  = _TinkerGraph.AddVertex(7, v => v.SetProperty(\"name\", \"peter\"). SetProperty(\"age\",   35));\r\n\r\n    Console.WriteLine(\"Number of vertices added: \" + _TinkerGraph.Vertices().Count());\r\n\r\n    marko.OnPropertyChanging += (sender, Key, oldValue, newValue, vote) =>\r\n        Console.WriteLine(\"'\" + Key + \"' property changing: '\" + oldValue + \"' -> '\" + newValue + \"'\");\r\n\r\n    marko.OnPropertyChanged  += (sender, Key, oldValue, newValue)       =>\r\n        Console.WriteLine(\"'\" + Key + \"' property changed: '\"  + oldValue + \"' -> '\" + newValue + \"'\");\r\n\r\n\r\n    var _DynamicMarko = marko.AsDynamic();\r\n    _DynamicMarko.age  += 100;\r\n    _DynamicMarko.doIt  = (Action<String>) ((text) => Console.WriteLine(\"Some infos: \" + text + \"!\"));\r\n    _DynamicMarko.doIt(_DynamicMarko.name + \"/\" + marko.GetProperty(\"age\") + \"/\");\r\n\r\n\r\n    var e7  = _TinkerGraph.AddEdge(marko, vadas,  7,  \"knows\",   e => e.SetProperty(\"weight\", 0.5));\r\n    var e8  = _TinkerGraph.AddEdge(marko, josh,   8,  \"knows\",   e => e.SetProperty(\"weight\", 1.0));\r\n    var e9  = _TinkerGraph.AddEdge(marko, lop,    9,  \"created\", e => e.SetProperty(\"weight\", 0.4));\r\n\r\n    var e10 = _TinkerGraph.AddEdge(josh,  ripple, 10, \"created\", e => e.SetProperty(\"weight\", 1.0));\r\n    var e11 = _TinkerGraph.AddEdge(josh,  lop,    11, \"created\", e => e.SetProperty(\"weight\", 0.4));\r\n\r\n    var e12 = _TinkerGraph.AddEdge(peter, lop,    12, \"created\", e => e.SetProperty(\"weight\", 0.2));\r\n\r\n    return _TinkerGraph;\r\n\r\n\r\n#### Help and Documentation\r\n\r\nAdditional help and background information can be found in the [Wiki](http://github.com/Vanaheimr/Blueprints.NET/wiki).\r\nFor more examples and tutorials please look at the [Bragi](http://github.com/Vanaheimr/Bragi) project if you are interessted\r\nin simple but interactive graph visualizations consult the [Loki](http://github.com/Vanaheimr/Loki) project or look at [Aegir](http://github.com/Vanaheimr/Aegir) for mapping applications.    \r\nNews and updates can also be found on twitter by following: [@ahzf](http://www.twitter.com/ahzf) or [@graphdbs](http://www.twitter.com/graphdbs).\r\n\r\n#### Installation\r\n\r\nThe installation of Blueprints.NET is very straightforward.    \r\nJust check out or download its sources and all its dependencies:\r\n\r\n- [NUnit](http://www.nunit.org/) for unit tests\r\n- [Newtonsoft.JSON](http://github.com/JamesNK/Newtonsoft.Json) for JSON processing\r\n- [Jurassic](http://github.com/Alxandr/Jurassic) for JavaScript processing and networking\r\n\r\nif you want to clone the entire Vanaheimr graph processing stack just run the following commands:\r\n\r\n    git clone git://github.com/Vanaheimr/Aegir\r\n    git clone git://github.com/Vanaheimr/Balder\r\n    git clone git://github.com/Vanaheimr/Blueprints.NET\r\n    git clone git://github.com/Vanaheimr/Bragi\r\n    git clone git://github.com/Vanaheimr/Eunomia\r\n    git clone git://github.com/Vanaheimr/Glyphe\r\n    git clone git://github.com/Vanaheimr/Hermod\r\n    git clone git://github.com/Vanaheimr/Illias\r\n    git clone git://github.com/Vanaheimr/Loki\r\n    git clone git://github.com/Vanaheimr/Styx\r\n    git clone git://github.com/Vanaheimr/Vanir\r\n    git clone git://github.com/Vanaheimr/Walkyr\r\n    git clone git://github.com/Vanaheimr/libs\r\n        \r\n    mkdir srclibs\r\n    cd srclibs\r\n    git clone git://github.com/ahzf/MonoCompilerAsAService.git\r\n    git clone git://github.com/Alxandr/Jurassic.git\r\n\r\n#### License and your contribution\r\n\r\n[Blueprints.NET](http://github.com/ahzf/blueprints.NET) is released under the [Apache License 2.0](http://www.apache.org/licenses/LICENSE-2.0). For details see the [LICENSE](/Vanaheimr/Blueprints.NET/blob/master/LICENSE) file.    \r\nTo suggest a feature, report a bug or general discussion: [http://github.com/Vanaheimr/Blueprints.NET/issues](http://github.com/Vanaheimr/Blueprints.NET/issues)    \r\nIf you want to help or contribute source code to this project, please use the same license.   \r\nThe coding standards can be found by reading the code ;)\r\n\r\n#### Acknowledgments\r\n\r\nBlueprints.NET is a reimplementation of the [Blueprints](http://github.com/tinkerpop/blueprints) library for Java\r\nprovided by [Tinkerpop](http://tinkerpop.com). Additional ideas are based on the [Boost Graph Library](http://www.boost.org/doc/libs/1_47_0/libs/graph/doc/index.html).    \r\nPlease read the [NOTICE](/Vanaheimr/Blueprints.NET/blob/master/NOTICE) file for further credits.\r\n","tagline":"Generic PropertyGraphs for .NET, Silverlight and Mono","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}